{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,kBAAkB;AAClB,IAAM,EAAS,SAAC,CAAhB,EAKE,IAAK,IAJC,EAAM,SAAS,aAAa,CAAC,MAE7B,EAAc,EAAM,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAE5C,EAAI,EAAG,EAAI,EAAa,IAAK,CACpC,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAI,MAAM,CAAC,EACb,CAEA,EAAM,MAAM,CAAC,EACf,EAEM,EAAY,SAAC,CAAnB,EACE,IAAM,EAAM,EAAM,gBAAgB,CAElC,EAAM,WAAW,CAAC,EACpB,EAEM,EAAY,SAAC,CAAnB,EACG,EAAG,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAA,CAA3B,EACC,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAI,MAAM,CAAC,EACb,EACF,EAEM,EAAe,SAAC,CAAtB,EACG,EAAG,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAA,CAA3B,EACC,EAAI,WAAW,CAAC,EAAI,QAAQ,CAAC,EAAE,CACjC,EACF,EAEM,EAAsB,SAAC,CAAA,CAAS,CAAA,CAAU,CAAhD,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,UAAU,QAAQ,CAAC,EAAE,CAEtD,EACE,EAAM,QAAQ,CAAC,MAAM,GAAK,GAC5B,EAAS,GAGP,EAAM,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAK,GACxC,EAAS,EAGf,EAEA,SAAS,aAAa,CAAC,eACpB,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAoB,GAAI,EAAQ,CAAA,E,GAEnE,SAAS,aAAa,CAAC,eACpB,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAoB,EAAG,EAAW,CAAA,E,GAErE,SAAS,aAAa,CAAC,kBACpB,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAoB,GAAI,EAAW,CAAA,E,GAEtE,SAAS,aAAa,CAAC,kBACpB,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAoB,EAAG,EAAc,CAAA,E,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar addRow = function(tbody) {\n    var row = document.createElement(\"tr\");\n    var countColumn = tbody.children[0].children.length;\n    for(var i = 0; i < countColumn; i++){\n        var td = document.createElement(\"td\");\n        row.append(td);\n    }\n    tbody.append(row);\n};\nvar removeRow = function(tbody) {\n    var row = tbody.lastElementChild;\n    tbody.removeChild(row);\n};\nvar addColumn = function(tbody) {\n    _to_consumable_array(tbody.children).forEach(function(row) {\n        var td = document.createElement(\"td\");\n        row.append(td);\n    });\n};\nvar removeColumn = function(tbody) {\n    _to_consumable_array(tbody.children).forEach(function(col) {\n        col.removeChild(col.children[0]);\n    });\n};\nvar handleEventClickBtn = function(limiter, callback, isRow) {\n    var tbody = document.querySelector(\".field\").children[0];\n    if (isRow) {\n        if (tbody.children.length !== limiter) callback(tbody);\n    } else if (tbody.children[0].children.length !== limiter) callback(tbody);\n};\ndocument.querySelector(\".append-row\").addEventListener(\"click\", function() {\n    return handleEventClickBtn(10, addRow, true);\n});\ndocument.querySelector(\".remove-row\").addEventListener(\"click\", function() {\n    return handleEventClickBtn(2, removeRow, true);\n});\ndocument.querySelector(\".append-column\").addEventListener(\"click\", function() {\n    return handleEventClickBtn(10, addColumn, false);\n});\ndocument.querySelector(\".remove-column\").addEventListener(\"click\", function() {\n    return handleEventClickBtn(2, removeColumn, false);\n});\n\n//# sourceMappingURL=index.6076f917.js.map\n","'use strict';\n\n// write code here\nconst addRow = (tbody) => {\n  const row = document.createElement('tr');\n\n  const countColumn = tbody.children[0].children.length;\n\n  for (let i = 0; i < countColumn; i++) {\n    const td = document.createElement('td');\n\n    row.append(td);\n  }\n\n  tbody.append(row);\n};\n\nconst removeRow = (tbody) => {\n  const row = tbody.lastElementChild;\n\n  tbody.removeChild(row);\n};\n\nconst addColumn = (tbody) => {\n  [...tbody.children].forEach(row => {\n    const td = document.createElement('td');\n\n    row.append(td);\n  });\n};\n\nconst removeColumn = (tbody) => {\n  [...tbody.children].forEach(col => {\n    col.removeChild(col.children[0]);\n  });\n};\n\nconst handleEventClickBtn = (limiter, callback, isRow) => {\n  const tbody = document.querySelector('.field').children[0];\n\n  if (isRow) {\n    if (tbody.children.length !== limiter) {\n      callback(tbody);\n    }\n  } else {\n    if (tbody.children[0].children.length !== limiter) {\n      callback(tbody);\n    }\n  }\n};\n\ndocument.querySelector('.append-row')\n  .addEventListener('click', () => handleEventClickBtn(10, addRow, true));\n\ndocument.querySelector('.remove-row')\n  .addEventListener('click', () => handleEventClickBtn(2, removeRow, true));\n\ndocument.querySelector('.append-column')\n  .addEventListener('click', () => handleEventClickBtn(10, addColumn, false));\n\ndocument.querySelector('.remove-column')\n  .addEventListener('click', () => handleEventClickBtn(2, removeColumn, false));\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","addRow","tbody","row","document","createElement","countColumn","children","td","append","removeRow","lastElementChild","removeChild","addColumn","forEach","removeColumn","col","handleEventClickBtn","limiter","callback","isRow","querySelector","addEventListener"],"version":3,"file":"index.6076f917.js.map"}